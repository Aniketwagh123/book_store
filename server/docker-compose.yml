version: "3"
services:
  db:
    container_name: db
    image: postgres:13
    networks:
      - mynetwork
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  web:
    container_name: web
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_NAME=${POSTGRES_DB}
      - DATABASE_USER=${POSTGRES_USER}
      - DATABASE_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_HOST=db
    depends_on:
      - db
    networks:
      - mynetwork

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    networks:
      - mynetwork
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_ENHANCED_SECURITY: "False"
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - "6379:6379"  # Changed the host port to avoid conflicts
    networks:
      - mynetwork

  celery:
    container_name: celery
    build: .
    command: celery -A book_store worker -l info
    volumes:
      - .:/app
    depends_on:
      - redis
      - web
    networks:
      - mynetwork

  celery_beat:
    build: .
    container_name: celery_beat
    command: celery -A book_store beat --loglevel=info
    restart: always
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    networks:
      - mynetwork

volumes:
  postgres_data:
  pgadmin_data:

networks:
  mynetwork:
